[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tagoio-sdk"
version = "5.0.1"
description = "Official Python SDK for TagoIO"
authors = [{name = "TagoIO Inc.", email = "contact@tago.io"}]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["tagoio", "iot", "analysis", "tago", "sensor", "device"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Intended Audience :: Developers",
]
dependencies = [
    "requests>=2.32.0,<3.0.0",
    "python-dateutil>=2.9.0",
    "sseclient-py>=1.8.0",
    "requests-toolbelt>=1.0.0",
]

[project.urls]
Homepage = "https://tago.io/"
Repository = "https://github.com/tago-io/sdk-python/"
Documentation = "https://py.sdk.tago.io/"
Changelog = "https://github.com/tago-io/sdk-python/releases"
"Bug Tracker" = "https://github.com/tago-io/sdk-python/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.12.7",
    "sphinx>=8.2.3",
    "requests-mock>=1.12.1",
]

[tool.hatch.build.targets.wheel]
packages = ["src/tagoio_sdk"]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by formatter
    "UP007", # Use X | Y syntax (not compatible with Python < 3.10)
    "UP045", # Use X | None syntax (not compatible with Python < 3.10)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true
combine-as-imports = true
lines-between-types = 1
lines-after-imports = 2

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test*"]
